class Solution {
    public List<Integer> twoOutOfThree(int[] nums1, int[] nums2, int[] nums3) {
        List<Integer> res = new ArrayList<>();
        //<val, [# of occur in array i]>
        HashMap<Integer, int[]> map = new HashMap<>();
        for(int i=0;i<nums1.length;i++){
            int[] arr = map.getOrDefault(nums1[i], new int[3]);
            arr[0]++;
            map.put(nums1[i], arr);
        }
        
        for(int i=0;i<nums2.length;i++){
            int[] arr = map.getOrDefault(nums2[i], new int[3]);
            arr[1]++;
            map.put(nums2[i], arr);
        }
        
        for(int i=0;i<nums3.length;i++){
            int[] arr = map.getOrDefault(nums3[i], new int[3]);
            arr[2]++;
            map.put(nums3[i], arr);
        }
        for(int key: map.keySet()){            
            
            int[] arr = map.get(key);            
            if(arr[0]>=1 && arr[1]>=1 || arr[0]>=1 && arr[2]>=1 || arr[1]>=1 && arr[2]>=1 && !res.contains(key)){
                res.add(key);
            }            
        }
        return res;
    }
}

/**

// determine similar values b/w arrays
return [predent in 2/3]
*/
